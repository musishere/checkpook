generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      ="postgresql://postgres.msunmwxjdbzyknkpbucr:uchihaItachi12@aws-0-ap-south-1.pooler.supabase.com:6543/postgres"
}

enum Role {
  ADMIN
  INSTRUCTOR
  STUDENT
}


model User {
  id             String           @id @default(uuid())
  email          String           @unique
  password       String
  role           Role
  courses        Course[]         @relation("InstructorCourses")
  enrollments    Enrollment[]     @relation("StudentEnrollments")
  lessonProgress LessonProgress[]
}

model Course {
  id           String       @id @default(uuid())
  title        String
  description  String
  price        Float
  thumbnailUrl String?
  category     String?
  instructorId String
  instructor   User         @relation("InstructorCourses", fields: [instructorId], references: [id])
  isApproved   Boolean      @default(false)
  lessons      Lesson[]
  enrollments  Enrollment[] @relation("CourseEnrollments")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Lesson {
  id        String   @id @default(uuid())
  title     String
  videoUrl  String
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  progress  LessonProgress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LessonProgress {
  id          String   @id @default(uuid())
  lessonId    String
  studentId   String
  lesson      Lesson   @relation(fields: [lessonId], references: [id])
  student     User     @relation(fields: [studentId], references: [id])
  completedAt DateTime @default(now())
}

model Enrollment {
  id        String   @id @default(uuid())
  studentId String
  courseId  String
  student   User     @relation("StudentEnrollments", fields: [studentId], references: [id])
  course    Course   @relation("CourseEnrollments", fields: [courseId], references: [id])
  createdAt DateTime @default(now())
}
